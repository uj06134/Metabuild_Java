import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

public class CafeDao {
	String driver = "oracle.jdbc.driver.OracleDriver";
	String url = "jdbc:oracle:thin:@localhost:1521:orcl";
	String id = "sqlid";
	String pw = "sqlpw";
	Connection conn  = null;
	PreparedStatement ps = null;
	ResultSet rs = null;
	
	public void CafeDao(){
		try {
			Class.forName(driver);
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}

	}
	
	public void getConnect(){
		try {
			conn = DriverManager.getConnection(url,id,pw);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public ArrayList<CafeBean> getAllcafe(){
		getConnect();
		ArrayList<CafeBean> lists = new ArrayList<CafeBean>();
		try {
			String sql = "select * from cafe order by num asc";
			ps = conn.prepareStatement(sql);
			rs = ps.executeQuery();
			
			while(rs.next()){
				int num = rs.getInt("num");
				String menu = rs.getString("menu");
				int price = rs.getInt("price");
				String cname = rs.getString("cname");
				String open_day = String.valueOf(rs.getDate("open_day"));
				
				CafeBean cb = new CafeBean();
				
				cb.setNum(num);
				cb.setMenu(menu);
				cb.setPrice(price);
				cb.setCname(cname);
				cb.setOpen_day(open_day);
				
				lists.add(cb);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(ps != null)
					ps.close();
				if(rs != null)
					rs.close();
				if(conn != null)
					conn.close();
			} catch(SQLException e) {
				e.printStackTrace();
			}
		}
		return lists;
	} // getAllcafe
	
	public ArrayList<CafeBean> getCafeBySearch(String column,String search_word) {
		getConnect();
		ArrayList<CafeBean> lists = new ArrayList<CafeBean>();
		try {
			String sql = "select * from cafe where lower ("+column+ ") like lower (?)";
			ps = conn.prepareStatement(sql);
			ps.setString(1, "%" +search_word+ "%");
			rs = ps.executeQuery();
			
			while(rs.next()){
				int num = rs.getInt("num");
				String menu = rs.getString("menu");
				int price = rs.getInt("price");
				String cname = rs.getString("cname");
				String open_day = String.valueOf(rs.getDate("open_day"));
				
				CafeBean cb = new CafeBean();
				
				cb.setNum(num);
				cb.setMenu(menu);
				cb.setPrice(price);
				cb.setCname(cname);
				cb.setOpen_day(open_day);
				
				lists.add(cb);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(ps != null)
					ps.close();
				if(rs != null)
					rs.close();
				if(conn != null)
					conn.close();
			} catch(SQLException e) {
				e.printStackTrace();
			}  finally {
				try {
					if(ps != null)
						ps.close();
					if(rs != null)
						rs.close();
					if(conn != null)
						conn.close();
				} catch(SQLException e) {
					e.printStackTrace();
				}
			}
		}
		return lists;
	} // getCafeBySearch
	
	public void insertCafe(String menu, int price, String cname, String open_day) {
		getConnect();
		try {
			String sql = "insert into cafe values (cafeseq.nextval,?,?,?,?)";
			ps = conn.prepareStatement(sql);
			ps.setString(1, menu);
			ps.setInt(2,price);
			ps.setString(3, cname);
			ps.setString(4, open_day);
			ps.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(ps != null)
					ps.close();
				if(conn != null)
					conn.close();
			} catch(SQLException e) {
				e.printStackTrace();
			} finally {
				try {
					if(ps != null)
						ps.close();
					if(conn != null)
						conn.close();
				} catch(SQLException e) {
					e.printStackTrace();
				}
			}
		}
	} // insertCafe
	
	public void updateCafe(int num, String menu, int price, String cname, String open_day) {
		getConnect();
		try {
			String sql = "update cafe set menu=?, price=?, cname=?, open_day=? where num=?";
			ps = conn.prepareStatement(sql);
			ps = conn.prepareStatement(sql);
			ps.setString(1, menu);
			ps.setInt(2,price);
			ps.setString(3, cname);
			ps.setString(4, open_day);
			ps.setInt(5, num);
			ps.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(ps != null)
					ps.close();
				if(conn != null)
					conn.close();
			} catch(SQLException e) {
				e.printStackTrace();
			}
		}
	} // updateCafe
	
	public void deleteCafe(int num) {
		getConnect();
		try {
			String sql = "delete from cafe where num=?";
			ps = conn.prepareStatement(sql);
			ps.setInt(1, num);
			ps.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(ps != null)
					ps.close();
				if(conn != null)
					conn.close();
			} catch(SQLException e) {
				e.printStackTrace();
			}
		}
	} // deleteCafe
	public void deleteAllCafe() {
		getConnect();
		try {
			String sql = "delete from cafe";
			ps = conn.prepareStatement(sql);
			ps.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(ps != null)
					ps.close();
				if(conn != null)
					conn.close();
			} catch(SQLException e) {
				e.printStackTrace();
			}
		}
		
	} // deleteAllCafe
	public ArrayList<CafeBean> getCountCafe() {
		
		return lists;
	}
	
}