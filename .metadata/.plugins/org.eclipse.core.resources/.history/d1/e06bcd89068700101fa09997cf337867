import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

public class BookDao { // DB
	String driver = "oracle.jdbc.driver.OracleDriver";
	String url = "jdbc:oracle:thin:@localhost:1521:orcl";
	String id = "sqlid";
	String pw = "sqlpw";
	Connection conn = null;
	PreparedStatement ps = null;
	ResultSet rs = null;

	public BookDao() {
		try {
			// 1. 드라이버 접속
			Class.forName(driver);
			System.out.println("드라이버 로드 성공");
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
	}

	public void getConnect() {
		try {
			// 2. 계정에 접속
			conn = DriverManager.getConnection(url,id,pw);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public ArrayList<BookBean> getAllBook(){
		// 2. 계정에 접속
		getConnect();
		ArrayList<BookBean> lists = new ArrayList<BookBean>();
		try {
			// 3. sql 작성-분석
			String sql = "select * from book order by no asc";
			ps = conn.prepareStatement(sql);
			rs = ps.executeQuery();
			while(rs.next()) {
				int no = rs.getInt("no");
				String title = rs.getString("title");
				String author = rs.getString("author");
				String publisher = rs.getString("publisher");
				int price = rs.getInt("price");
//				String pub_day = rs.getString("pub_day");
				String pub_day = String.valueOf(rs.getDate("pub_day"));
				
				BookBean bb = new BookBean();
				
				bb.setNo(no);
				bb.setTitle(title);
				bb.setAuthor(author);
				bb.setPublisher(publisher);
				bb.setPrice(price);
				bb.setPub_day(pub_day);
				
				lists.add(bb);

			}

		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(ps != null)
					ps.close();
				if(rs != null)
					rs.close();
				if(conn != null)
					conn.close();
			} catch(SQLException e) {
				e.printStackTrace();
			}
		}
		return lists;
	} // getAllBook
	
	public ArrayList<BookBean> getBookBySearch(String column, String search_word){
		getConnect();
		ArrayList<BookBean> lists = new ArrayList<BookBean>();
		try {
			String sql = "select * from book where "+column + " like ?";
			ps = conn.prepareStatement(sql);
			ps.setString(1, "%"+search_word+"%");
			rs = ps.executeQuery();
			while(rs.next()) {
				int no = rs.getInt("no");
				String title = rs.getString("title");
				String author = rs.getString("title");
				String publisher = rs.getString("title");
				int price = rs.getInt("price");
				Date t = rs.getDate("pub_day");
				String pub_day = String.valueOf(t);
				BookBean bb = new BookBean();
				bb.setNo(no);
				bb.setTitle(title);
				bb.setAuthor(author);
				bb.setPublisher(publisher);
				bb.setPrice(price);
				bb.setPub_day(pub_day);
				
				lists.add(bb);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(ps != null)
					ps.close();
				if(rs != null)
					rs.close();
				if(conn != null)
					conn.close();
			} catch(SQLException e) {
				e.printStackTrace();
			}
		}	
		return lists;
	} // getBookBySearch
	
	public void insertData(String title, String author, String publisher, int price, String pub_day) {
		getConnect();
		int cnt = -1;
		try {
			String sql = "insert into book values(bseq.nextval,?,?,?,?,?)";
			ps = conn.prepareStatement(sql);
			ps.setString(1,title); 
			ps.setString(2,author);
			ps.setString(3,publisher);
			ps.setInt(4,price);
			ps.setString(5,pub_day);
			
			cnt = ps.executeUpdate();
			System.out.println(cnt);
		
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(ps != null)
					ps.close();
				if(conn != null)
					conn.close();
			} catch(SQLException e) {
				e.printStackTrace();
			}
		}
	}// insertData
	
	public int updateData(BookBean bb){
		getConnect();
		int cnt = -1;
		try {
			String sql = "update book set title=?, author=?, publisher=?, price=?, pub_day=? where no=?";
			conn.setAutoCommit(false); // 자동커밋 해제
			ps = conn.prepareStatement(sql);
			
			ps.setString(1, bb.getTitle());
			ps.setString(2, bb.getAuthor());
			ps.setString(3, bb.getPublisher());
			ps.setInt(4, bb.getPrice());
			ps.setString(5, bb.getPub_day());
			ps.setInt(6, bb.getNo());
			
			cnt = ps.executeUpdate(); // 실행
			conn.commit(); // 전부 수정하면 커밋 실행
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(ps != null) {
					ps.close();
				}
				if(conn != null) {
					conn.close();
				}
			}catch(SQLException e) {
				e.printStackTrace();
			}
		}
		return cnt;
	} // updateData
	public void deleteData(int no) {
		getConnect();
		int cnt = -1;
		try {
			String sql = "delete book where no=?";
			conn.setAutoCommit(false); // 자동커밋 해제
			ps = conn.prepareStatement(sql);
			ps.setInt(1, no);
			
			cnt = ps.executeUpdate();
			conn.commit(); // 전부 수정하면 커밋 실행
			System.out.println(cnt);
		} catch (SQLException e) {
			e.printStackTrace();
			// 삭제중 문제가 발생하면 다시 롤백
			try {
				conn.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
		} finally {
			try {
				if(ps != null) {
					ps.close();
				}
				if(conn != null) {
					conn.close();
				}
			}catch(SQLException e) {
				e.printStackTrace();
			}
		}
	} // deleteData
}

